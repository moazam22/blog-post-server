# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  firstName: String!
  lastName: String!
  email: String!
  createdAt: DateTime
  updatedAt: DateTime
  fullName: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AllUsersDto {
  users: [User!]
  count: Float
}

type ResponseMsgPayload {
  message: String!
  status: Float!
}

type CreatedUser {
  user: User!
  access_token: String!
}

type ForgotPassword {
  userKey: String!
}

type AccessUserPayload {
  access_token: String
}

type PostComment {
  id: String!
  commentBody: String!
  user: User
  post: Post
  parent: PostComment
  reply: [PostComment!]
  createdAt: DateTime
  updatedAt: DateTime
}

type Post {
  id: String!
  title: String!
  description: String!
  readTime: String
  attachmentUrl: String
  user: User
  postComments: [PostComment!]
  createdAt: DateTime
  updatedAt: DateTime
}

type AllPosts {
  posts: [Post!]
  count: Float
}

type UserPostESResponse {
  userId: String!
  firstName: String!
  lastName: String!
  postId: String!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
}

type Query {
  findUserById(userId: String!): User!
  fetchAllUser(paginateInput: PaginateInput!): AllUsersDto!
  getCurrentUser: User!
  fetchAllPosts(paginateInput: PaginateInput!): AllPosts!
  fetchPost(postId: String!): Post!
  searchUserPostES(queryString: String!): [UserPostESResponse!]!
  searchPost(queryString: String!): [Post!]!
  fetchUserPosts(paginateInput: PaginateInput!): AllPosts!
}

input PaginateInput {
  limit: Int!
  page: Int!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): CreatedUser!
  updateUser(updateUserInput: UpdateUserInput!): ResponseMsgPayload!
  deleteUser(userId: String!): ResponseMsgPayload!
  login(loginUser: LoginUserInput!): AccessUserPayload!
  forgotPassword(email: String!): ForgotPassword!
  updatePassword(passwordUpdateInput: UpdatePasswordInput!): ResponseMsgPayload!
  signUp(signUpUserInput: CreateUserInput!): CreatedUser!
  createUserPost(createPostInput: CreatePostInput!): ResponseMsgPayload!
  updateUserPost(updatePostInput: UpdatePostInput!): ResponseMsgPayload!
  deletePost(postId: String!): ResponseMsgPayload!
  createPostComment(createCommentInput: CreateCommentInput!): ResponseMsgPayload!
  deleteComment(commentId: String!): ResponseMsgPayload!
  updateComment(updateCommentInput: UpdateCommentInput!): ResponseMsgPayload!
}

input CreateUserInput {
  firstName: String
  lastName: String
  email: String!
  password: String!
}

input UpdateUserInput {
  id: String!
  firstName: String
  lastName: String
  email: String!
  resetPasswordToken: String
  resetPasswordTokenExpiredAt: DateTime
}

input LoginUserInput {
  email: String!
  password: String!
}

input UpdatePasswordInput {
  password: String!
  userKey: String!
}

input CreatePostInput {
  title: String!
  description: String!
  readTime: String
  attachmentUrl: String
}

input UpdatePostInput {
  postId: String!
  title: String
  description: String
  readTime: String
  attachmentUrl: String
}

input CreateCommentInput {
  commentBody: String!
  postId: String!
  parentId: String
}

input UpdateCommentInput {
  commentBody: String!
  commentId: String!
}